{"version":3,"file":"static/js/840.8d9f8133.chunk.js","mappings":"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","sources":["pages/MovieDetails.styled.js","pages/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PosterWrapper = styled.div`\n  display: flex;\n  margin-top: 7px;\n`;\n\nexport const PosterInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  margin-left: 10px;\n`;\n\nexport const AdInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-top: 7px;\n  border: 1px solid silver;\n`;\n","import { fetchMovieDetails } from 'api/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport {\n  AdInfoWrapper,\n  PosterInfoWrapper,\n  PosterWrapper,\n} from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const [movie, setMovies] = useState({});\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  const { release_date, overview, vote_average, genres, title } = movie;\n  const voteAverage = Math.round(vote_average * 10) + '%';\n  const releaseYear = new Date(release_date).getFullYear();\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    async function getMovieDetails() {\n      try {\n        setLoading(true);\n        setError(false);\n        const resp = await fetchMovieDetails(movieId);\n        setMovies(resp);\n        console.log(resp);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMovieDetails();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <p>Something went wrong, try again.</p>\n      ) : (\n        <>\n          <Link to={backLink.current}>\n            <AiOutlineArrowLeft />\n            Go back\n          </Link>\n          <PosterWrapper>\n            {movie && (\n              <img\n                src={\n                  movie.poster_path\n                    ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                    : defaultImg\n                }\n                width={250}\n                alt=\"poster\"\n              />\n            )}\n            <PosterInfoWrapper>\n              {title ? (\n                <h1>\n                  {title} ({release_date ? releaseYear : 'XXXX'})\n                </h1>\n              ) : (\n                <p>We don`t have title for this movie</p>\n              )}\n\n              {vote_average ? (\n                <p>User score: {voteAverage}</p>\n              ) : (\n                <p>We don`t have votes for this movie</p>\n              )}\n\n              {overview ? (\n                <div>\n                  <h2>Overview</h2>\n                  <p>{overview}</p>\n                </div>\n              ) : (\n                <p>We don`t have overview for this movie</p>\n              )}\n\n              {genres ? (\n                <div>\n                  <h2>Genres</h2>\n                  {genres.map(({ name, id }) => (\n                    <span key={id}>{name} </span>\n                  ))}\n                </div>\n              ) : (\n                <p>We don`t have genres for this movie</p>\n              )}\n            </PosterInfoWrapper>\n          </PosterWrapper>\n          {error && <p>Something went wrong, try again.</p>}\n          <AdInfoWrapper>\n            <p>Additional information</p>\n            <ul>\n              <li>\n                <Link to={`cast`}>Cast</Link>\n              </li>\n              <li>\n                <Link to={`reviews`}>Reviews</Link>\n              </li>\n            </ul>\n          </AdInfoWrapper>\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["PosterWrapper","styled","_templateObject","_taggedTemplateLiteral","PosterInfoWrapper","_templateObject2","AdInfoWrapper","_templateObject3","MovieDetails","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movie","setMovies","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","movieId","useParams","location","useLocation","backLink","useRef","state","from","release_date","overview","vote_average","genres","title","voteAverage","Math","round","releaseYear","Date","getFullYear","useEffect","_getMovieDetails","_asyncToGenerator","_regeneratorRuntime","_callee","resp","_context","prev","next","fetchMovieDetails","sent","console","log","t0","finish","stop","apply","arguments","getMovieDetails","_jsx","_Fragment","children","Loader","_jsxs","Link","to","current","AiOutlineArrowLeft","src","poster_path","concat","width","alt","map","_ref","name","id","Outlet"],"sourceRoot":""}